library(ggplot2)
library(tidyverse)
library(ggthemes)
library(lubridate)
library(maps)
library(svglite)
#function to floor the decades
floor_dec= function(myyear){
return(myyear - myyear %% 10)
}
floor_dec_v <- Vectorize(floor_dec)
## Data loading
media_franchises <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-07-02/media_franchises.csv")
#add a decade column
media_franchises <- media_franchises %>% mutate(decade_created=as.character(floor_dec_v(year_created)))
#number of franchise by decades
simple <- media_franchises %>% select(decade_created, franchise, original_media) %>% distinct()
#merge film and animated film in one section
simple <- simple %>% mutate_if(is.character,
str_replace_all, pattern = "Animated film", replacement = "Film")
#merge Anime and manga
simple <- simple %>% mutate_if(is.character,
str_replace_all, pattern = "Manga", replacement = "Japan")
simple <- simple %>% mutate_if(is.character,
str_replace_all, pattern = "Anime", replacement = "Japan")
simple <- simple %>% mutate_if(is.character,
str_replace_all, pattern = "Japan", replacement = "Anime/Manga")
#merge Cartoon, Cartoon character and Animated cartoon
simple <- simple %>% mutate_if(is.character,
str_replace_all, pattern = "Cartoon character", replacement = "Cartoon")
simple <- simple %>% mutate_if(is.character,
str_replace_all, pattern = "Animated cartoon", replacement = "Cartoon")
#merche comic book and comic strip
simple <- simple %>% mutate_if(is.character,
str_replace_all, pattern = "Comic book", replacement = "Comic book/strip")
simple <- simple %>% mutate_if(is.character,
str_replace_all, pattern = "Comic strip", replacement = "Comic book/strip")
#merge Novel, book and visual novel
simple <- simple %>% mutate_if(is.character,
str_replace_all, pattern = "Novel", replacement = "Book")
simple <- simple %>% mutate_if(is.character,
str_replace_all, pattern = "Visual novel", replacement = "Book")
#merge Television series and Animated series
simple <- simple %>% mutate_if(is.character,
str_replace_all, pattern = "Television series", replacement = "Series")
simple <- simple %>% mutate_if(is.character,
str_replace_all, pattern = "Animated series", replacement = "Series")
#merge Digital pet and video game
simple <- simple %>% mutate_if(is.character,
str_replace_all, pattern = "Digital pet", replacement = "Video game")
#merge greeting card and Musical theater
simple <- simple %>% mutate_if(is.character,
str_replace_all, pattern = "Greeting card", replacement = "Other")
simple <- simple %>% mutate_if(is.character,
str_replace_all, pattern = "Musical theatre", replacement = "Other")
bplot1 <- simple %>% ggplot(aes(x=decade_created, fill=original_media)) +
geom_bar()+
theme_classic()
bplot1
out_file="/Users/aponsero/Documents/Rvisualisations_tidytuesday/week27_19/week27.svg"
ggsave(out_file, width = 10, height = 7, units = "cm")
#plot owners
dis <- media_franchises %>% select(franchise, original_media, owners) %>% distinct() %>% group_by(owners) %>% tally()
dis
bplot2 <- dis %>% ggplot(aes(x=owners)) +
geom_bar()+
theme_classic()
bplot2
View(dis)
View(media_franchises)
#pie chart for Winnie, Star wars and Frozen
franchises=c("Winnie the Pooh", "Star Wars","Frozen")
three <- media_franchises %>% filter(franchise %in% franchises)
View(three)
p2 <- three %>% ggplot(aes(fill=revenue_category, ymax=ymax, ymin=ymin, xmax=4, xmin=3)) +
geom_rect(colour="grey30") +
coord_polar(theta="y") +
xlim(c(0, 4)) +
theme_bw() +
theme(panel.grid=element_blank(), axis.text=element_blank(),
axis.ticks=element_blank()) +
facet_grid(facets = . ~ franchise)
p2
p2 <- three %>% ggplot(aes(x = "", y = revenue, fill = revenue_category)) +
geom_bar(stat = "identity") +
geom_text(aes(label = round(Percent, digits = 2)), position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
facet_grid(facets = . ~ franchises)
p2
p2 <- three %>% ggplot(aes(x = "", y = revenue, fill = revenue_category)) +
geom_bar(stat = "identity") +
geom_text(aes(label = round(Percent, digits = 2)), position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y")
p2
p2 <- three %>% ggplot(aes(x = "", y = revenue, fill = revenue_category)) +
geom_bar(stat = "identity") +
geom_text(aes(label = round(revenue, digits = 2)), position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y")
p2
p2 <- three %>% ggplot(aes(x = "", y = revenue, fill = revenue_category)) +
geom_bar(stat = "identity") +
geom_text(aes(label = round(revenue, digits = 2)), position = position_stack(vjust = 0.5))
p2
#pie chart for Winnie, Star wars and Frozen
myfranchises=c("Winnie the Pooh", "Star Wars","Frozen")
three <- media_franchises %>% filter(franchise %in% myfranchises) %>%
group_by(franchise) %>% mutate(Percent = revenue / sum(revenue))
View(three)
pie <- three %>% ggplot(aes(x = "", y = Percent, fill = revenue_category)) +
geom_bar(stat = "identity") +
geom_text(aes(label = round(Percent, digits = 2)),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
facet_grid(facets = . ~ franchise)  +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = 'bottom') +
guides(fill = guide_legend(nrow = 2, byrow = TRUE))
pie
pie <- three %>% ggplot(aes(x = "", y = Percent, fill = revenue_category)) +
geom_bar(stat = "identity") +
geom_text(aes(label = round(Percent*100, digits = 0)),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
facet_grid(facets = . ~ franchise)  +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = 'bottom') +
guides(fill = guide_legend(nrow = 2, byrow = TRUE))
pie
pie <- three %>% ggplot(aes(x = "", y = Percent, fill = revenue_category)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") +
facet_grid(facets = . ~ franchise)  +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = 'bottom') +
guides(fill = guide_legend(nrow = 2, byrow = TRUE))
pie
pie <- three %>% ggplot(aes(x = "", y = Percent, fill = revenue_category)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") +
facet_grid(facets = . ~ franchise)  +
theme_classic()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = 'bottom') +
guides(fill = guide_legend(nrow = 2, byrow = TRUE))
pie
pie <- three %>% ggplot(aes(x = "", y = Percent, fill = revenue_category)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") +
facet_grid(facets = . ~ franchise)  +
theme_classic()+
theme(
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid  = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = 'bottom') +
guides(fill = guide_legend(nrow = 2, byrow = TRUE))
pie
three$franchise_f = factor(three$franchise,
levels=c("Winnie the Pooh", "Star Wars","Frozen"))
pie <- three %>% ggplot(aes(x = "", y = Percent, fill = revenue_category)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") +
facet_grid(facets = . ~ franchise_f)  +
theme_classic()+
theme(
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid  = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = 'bottom') +
guides(fill = guide_legend(nrow = 2, byrow = TRUE))
pie
pie <- three %>% ggplot(aes(x = 2, y = Percent, fill = revenue_category)) +
geom_bar(stat = "identity") +
coord_polar(theta = "y") +
xlim(0.5, 2.5)+
facet_grid(facets = . ~ franchise_f)  +
theme_classic()+
theme(
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid  = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = 'bottom') +
guides(fill = guide_legend(nrow = 2, byrow = TRUE))
pie
library(ggplot2)
library(tidyverse)
library(ggthemes)
library(svglite)
library(waffle)
library(extrafont)
#function to floor the decades
floor_dec= function(myyear){
return(myyear - myyear %% 10)
}
floor_dec_v <- Vectorize(floor_dec)
## Data loading
media_franchises <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-07-02/media_franchises.csv")
font_import()
# check that Font Awesome is imported
fonts()[grep("Awesome", fonts())]
install.packages("fontawesome")
devtools::install_github("rstudio/fontawesome")
install.packages("extrafontdb", repos = "http://cran.rstudio.com/")
install.packages("extrafontdb", repos = "http://cran.rstudio.com/")
library(extrafont)
fa_font <- tempfile(fileext = ".ttf")
download.file("http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/fonts/fontawesome-webfont.ttf?v=4.3.0",
destfile = fa_font, method = "curl")
font_import(paths = dirname(fa_font), prompt = FALSE)
fonts()
gplot(mtcars) +
geom_text(aes(mpg, wt, colour = factor(cyl)),
label = intToUtf8(fa_df[fa_df$codes == "fa-car", "char_int"]),
family = "FontAwesome",
size = 12)
library(stringr)
library(ggplot2)
ggplot(mtcars) +
geom_text(aes(mpg, wt, colour = factor(cyl)),
label = intToUtf8(fa_df[fa_df$codes == "fa-car", "char_int"]),
family = "FontAwesome",
size = 12)
fa_css <- tempfile(fileext = ".css")
download.file("http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.css", destfile = fa_css)
fa_parsed <- css.parser(fa_css)
library(purrr)
library(highlight)
library(dplyr)
library(stringr)
library(ggplot2)
fa_css <- tempfile(fileext = ".css")
download.file("http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.css", destfile = fa_css)
fa_parsed <- css.parser(fa_css)
install.packages(highlight)
install.packages("highlight")
fa_css <- tempfile(fileext = ".css")
download.file("http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.css", destfile = fa_css)
fa_parsed <- css.parser(fa_css)
library(highlight)
fa_css <- tempfile(fileext = ".css")
download.file("http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.css", destfile = fa_css)
fa_parsed <- css.parser(fa_css)
fa_df <- fa_parsed[str_detect(names(fa_parsed), ":before")] %>%
unzip("content") %>%
.[[1]] %>%
data_frame(char_raw = .,
char  = str_extract(char_raw, "[0-9a-f]+"),
char_int = strtoi(char, 16L),
codes = str_replace(names(.), ":before", ""))
fa_df
font_import()
# check that Font Awesome is imported
fonts()[grep("Awesome", fonts())]
waffle(c(50, 30, 15, 5), rows = 5, title = "Your basic waffle chart")
library(ggplot2)
library(tidyverse)
library(ggthemes)
library(svglite)
library(waffle)
library(extrafont)
#function to floor the decades
floor_dec= function(myyear){
return(myyear - myyear %% 10)
}
# check that Font Awesome is imported
fonts()[grep("Awesome", fonts())]
waffle(c(50, 30, 15, 5), rows = 5, title = "Your basic waffle chart")
waffle(c(50, 30, 15, 5), rows = 5, use_glyph = "child", glyph_size = 6,
title = "Look I made an infographic using R!")
waffle(c(50, 30, 15, 5), rows = 5, use_glyph = "child", glyph_size = 20,
title = "Look I made an infographic using R!")
waffle(c(50, 30, 15, 5), rows = 5, use_glyph = "music", glyph_size = 20,
title = "Look I made an infographic using R!")
library(ggplot2)
library(tidyverse)
library(ggthemes)
library(svglite)
library(waffle)
library(extrafont)
font_import()
# check that Font Awesome is imported
fonts()[grep("Awesome", fonts())]
waffle(c(50, 30, 15, 5), rows = 5, use_glyph = "music", glyph_size = 20,
title = "Look I made an infographic using R!")
library(ggplot2)
library(tidyverse)
library(ggthemes)
library(svglite)
library(waffle)
library(extrafont)
#function to floor the decades
floor_dec= function(myyear){
return(myyear - myyear %% 10)
}
font_import()
# check that Font Awesome is imported
fonts()[grep("Awesome", fonts())]
waffle(c(50, 30, 15, 5), rows = 5, title = "Your basic waffle chart")
waffle(c(50, 30, 15, 5), rows = 5, use_glyph = "music", glyph_size = 20,
title = "Look I made an infographic using R!")
waffle(c(50, 30, 15, 5), rows = 5, face="Font Awesome 5 Free Regular", use_glyph = "music", glyph_size = 20,
title = "Look I made an infographic using R!")
waffle(
parts / 10, rows = 3, colors = c("#969696", "#1879bf", "#009bda"),
use_glyph = "medkit", size = 8
) + expand_limits(y = c(0, 4))
waffle(rows = 3, colors = c("#969696", "#1879bf", "#009bda"),
use_glyph = "medkit", size = 8
) + expand_limits(y = c(0, 4))
waffle(parts / 10, rows = 3, colors = c("#969696", "#1879bf", "#009bda"),
use_glyph = "medkit", size = 8
) + expand_limits(y = c(0, 4))
parts <- c(`Un-breached\nUS Population` = (318 - 11 - 79), `Premera` = 11, `Anthem` = 79)
waffle(parts / 10, rows = 3, colors = c("#969696", "#1879bf", "#009bda"),
use_glyph = "medkit", size = 8
) + expand_limits(y = c(0, 4))
library(extrafont)
library(ggplot2)
library(tidyverse)
library(ggthemes)
library(svglite)
library(waffle)
library(extrafont)
font_import()
# check that Font Awesome is imported
fonts()[grep("Awesome", fonts())]
waffle(c(50, 30, 15, 5), rows = 5, title = "Your basic waffle chart")
waffle(c(50, 30, 15, 5), rows = 5, face="Font Awesome 5 Free Regular", use_glyph = "music", glyph_size = 20,
title = "Look I made an infographic using R!")
parts <- c(`Un-breached\nUS Population` = (318 - 11 - 79), `Premera` = 11, `Anthem` = 79)
waffle(c(50, 30, 15, 5), rows = 5, use_glyph = "music", glyph_size = 20,
title = "Look I made an infographic using R!")
parts <- c(`Un-breached\nUS Population` = (318 - 11 - 79), `Premera` = 11, `Anthem` = 79)
waffle(parts / 10, rows = 3, colors = c("#969696", "#1879bf", "#009bda"),
use_glyph = "medkit", size = 8
) + expand_limits(y = c(0, 4))
