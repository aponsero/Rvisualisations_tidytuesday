library(ggplot2)
library(dplyr)
library(gganimate)
library(gapminder)
library(tidyverse)
library(lubridate)
library(extrafont)
#Load dataset
game_data <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-07-30/video_games.csv")
#remove data with playtime=0
data_plot<-game_data %>% filter(! is.na(metascore) &
!is.na(price))
# static plot
data_plot %>% ggplot(aes(x = metascore, y = price, color=owners)) +
labs(y="price", x="median playtime",
title="price compared to median playtime")+
geom_point(size = 3) +
theme_minimal(base_size = 16)+
theme(text=element_text(family="Times New Roman"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
# static plot
data_plot %>% ggplot(aes(x = metascore, y = price, color=owners)) +
labs(y="price", x="metascore",
title="price compared to median playtime")+
geom_point(size = 3) +
theme_minimal(base_size = 16)+
theme(text=element_text(family="Times New Roman"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
View(data_plot)
library(ggplot2)
library(dplyr)
library(gganimate)
library(gapminder)
library(tidyverse)
library(lubridate)
library(extrafont)
font_import()
#Load dataset
game_data <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-07-30/video_games.csv")
#remove data with playtime=0
data_plot<-game_data %>% filter(!is.na(metascore) & !is.na(price) & !is.na(owners))
View(data_plot)
#modify owners categories
data_plot %>% group_by(owners)
#modify owners categories
data_plot %>% group_by(owners) %>% tally()
data_plot %>% mutate(owners = replace(owners,
str_detect(owners, "0 .. 20,000"),
"0 ... 50,000"))
test <- data_plot %>% mutate(owners = replace(owners,
str_detect(owners, "0 .. 20,000"),
"0 ... 50,000"))
View(test)
levels(data_plot$owners)[grepl("20,000", levels(data_plot$owners))] <- "0 to 50,000"
View(data_plot)
levels(data_plot$owners)[grepl("20,000", levels(data_plot$owners))]
levels(data_plot$owners)[grepl("20,000")]
levels(data_plot$owners)[grep("[20,000]")]
levels(data_plot$owners)[grep("[20,000]"), levels(data_plot$owners))]
levels(data_plot$owners)[grep("[20,000]", levels(data_plot$owners))]
grep("[20,000]", levels(data_plot$owners))
levels(data_plot$owners)[grepl("[20,000]", levels(data_plot$owners))] <- "0 to 50,000"
View(data_plot)
data_plot %>% filter(!grepl("20,000", owners, fixed = FALSE))
test <-data_plot %>% filter(!grepl("20,000", owners, fixed = FALSE))
View(test)
test <-data_plot %>% filter(!grepl("20,000", owners, fixed = TRUE))
test <-data_plot %>% filter(!grepl(as.character(20,000), owners, fixed = TRUE))
View(test)
test <-data_plot %>% filter(!grepl("[[20,000]]", owners, fixed = TRUE))
View(test)
test <-data_plot %>% filter(grepl("[[20,000]]", owners, fixed = TRUE))
test <-data_plot %>% filter(grepl("20,000", owners, fixed = TRUE))
#modify owners categories
data_plot %>% group_by(owners) %>% tally()
test2 <-data_plot$owners[grepl("20,000", owners, fixed = TRUE)]
test2 <-data_plot$owners[grepl("20,000", data_plot$owner, fixed = TRUE)]
test2 <-grepl("20,000", data_plot$owner, fixed = TRUE)
test2 <-data_plot$owners[owners %like% "20,000"]
test2 <- data_plot %>%
mutate(owner_cat = str_replace(owners, "20,000", "1"))
View(test2)
test <-data_plot %>% filter(grepl("20\\,000", owners, fixed = TRUE))
#modify owners categories
data_plot %>% group_by(owners) %>% tally()
test <-data_plot %>% filter(grepl(as.character("50,000 .. 100,000"), owners, fixed = TRUE))
test <-data_plot %>% filter(grepl(as.character(".. 100,000"), owners, fixed = TRUE))
test <-data_plot %>% filter(grepl(as.character(".."), owners, fixed = TRUE))
test <-data_plot %>% filter(grepl(as.character(".. "), owners, fixed = TRUE))
test <-data_plot %>% filter(grepl(as.character(".. "), owners, fixed = FALSE))
test <-data_plot %>% filter(grepl(as.character(" .. "), owners, fixed = FALSE))
test<-data_plot %>%mutate(owner_cat = replace(owners, "20,000,000", "test"))
test<-data_plot %>%mutate(owners = replace(owners, "20,000,000", "test"))
cat1 <-data_plot %>% filter(grepl(`0 .. 20,000`, owners, fixed = FALSE))
data_plot %>% mutate(owners= str_clean(owners))
library(stringr)
data_plot %>% mutate(owners= str_clean(owners))
library(exploratory)
install.packages("exploratory")
